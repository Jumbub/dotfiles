#!/usr/bin/env zsh

alias v="nvim"
alias cleanvim="nvim -u NONE"
alias vgs="gs | grep -Po \"(?<=modified:)[^']+\" | sed 's/ *//g' | rofi -dmenu -theme $HOME/.config/rofi/longCustomTheme.rasi | xargs nvim"

alias va="nvim $HOME/.aliases"
alias vma="nvim $HOME/.machine-aliases"
alias vinstall="nvim $HOME/scripts/install"
alias vreplace="nvim $HOME/scripts/replace"
alias vrt="nvim $HOME/.config/rofi-tasks/tasks.json"
alias vrc="nvim $HOME/.zshrc"
alias venv="nvim $HOME/.zshenv"
alias vawe="nvim -S '$HOME/workspaces/vim/\%home\%jamie\%.config\%awesome.vim'"
alias vk="nvim -S '$HOME/workspaces/vim/\%home\%jamie\%.config\%kitty.vim'"
alias vp="nvim -S '$HOME/workspaces/vim/\%home\%jamie\%.config\%nvim.vim'"
alias vs="nvim -S '$HOME/workspaces/vim/\%home\%jamie\%scripts.vim'"

alias kittyTinyFont="kitty @ set-font-size 11"
alias kittySmallFont="kitty @ set-font-size 12"
alias kittyNormalFont="kitty @ set-font-size 14"

alias yarn="nvm use 14; unalias yarn; yarn"

alias src="source $HOME/.zshrc"

function watchdo {
  rg -l "." --no-ignore | entr -c -r -s $@
}

function haveigot {
  command -v $1 > /dev/null
}

function jt {
  sensible-browser "https://hejira.atlassian.net/browse/`git symbolic-ref HEAD --short`"
}

alias l="exa -l"
alias ls="exa"
alias la="exa -al"

function jiraForBranch { echo "`git symbolic-ref HEAD --short`" | grep "\w\+-[0-9]\+" -o }

alias gl="git log"
alias gm="git merge"
alias gmom="git fetch && git merge origin/master"
alias gmod="git fetch && git merge origin/develop"
alias gf="git fetch"
alias glp="git log -p"
alias gp="git push"
alias gpl="git pull"
alias ggp="git branch | grep \\* | cut -d ' ' -f2 | xargs -i git push --set-upstream origin {}"
alias gca="git commit --amend"
alias gc="git commit"
alias gclean="git clean -f -d"
alias gcl="git clone"
function gcmm { local MSG="$@"; git commit -m "$MSG"; };
function gcm { local MSG="$@"; git commit -m "`jiraForBranch` $MSG"; };
alias gco="git checkout"
alias gcob="git checkout -b"
alias gcop="git checkout -p"
alias grb="git rebase"
alias grbomi="git rebase origin/master -i"
alias gr="git reset"
alias grhom="git reset --hard origin/master"
alias grh="git reset HEAD^"
function grhom { git reset --hard "origin/`git symbolic-ref HEAD --short`" $@ };
alias gst="git stash"
alias gstp="git stash -p"
alias gstu="git stash --include-untracked"
function gstm { local MSG="$@"; git stash push -m "$MSG"; };
function gstmu { local MSG="$@"; git stash push -u -m "$MSG"; };
alias ga="git add"
alias gap="git add -NpA"
alias gaa="git add -A"
alias gs="git status"
alias gd="git diff"
function grdaysago { echo 'Current changes will be stashed' && confirm && git stash && git reset --hard $1@{$2.days.ago} }

alias img="kitty +kitten icat"

function kk { kittySmallFont && k9s $@ && kittyNormalFont }

source $HOME/scripts/dotfiles

if [ -f $HOME/.machine-aliases ]
then
  source $HOME/.machine-aliases
fi

# Code pad helper
function pad {
  local CODEPAD="$HOME/repos/codepad/codepad"

  if [ "$1" = "new" ]
  then
    cd "`$CODEPAD $@`"
  else
    $CODEPAD $@
  fi
}
