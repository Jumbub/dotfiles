#!/bin/bash

CONFIG_EDITOR=vim
LOCATION_REPOS=$HOME/repos

alias asource="source $HOME/.aliases"
alias zsource="source $HOME/.zshrc"

LOCATION_DOTFILES_REPO=${LOCATION_REPOS}/dotfiles
LOCATION_GIT_IGNORE=${HOME}/.gitignore
dotoverride() {
  git --git-dir=${LOCATION_DOTFILES_REPO}/.git --work-tree=$HOME $@
}
dotstatus() {
  dotoverride status $@
}
dotdiff() {
  dotoverride diff $@
}
dotadd() {
  if [[ $1 ]]; then
    # Split the string by the "/" delimiter
    PATH_SPLIT=("${(s|/|)${1}}")
    BUILT_STRING="!"
    for PATH_PART in $PATH_SPLIT; do
      BUILT_STRING="${BUILT_STRING}/${PATH_PART}"
      # If the built string is already in the file, do not append again
      if ! grep -q "${BUILT_STRING}" "${LOCATION_GIT_IGNORE}"; then
        # Add the file/folder to the gitignore
        echo $BUILT_STRING >> $LOCATION_GIT_IGNORE
      fi
    done
    unset BUILT_STRING
  else
    echo "dotadd <PATH>"
  fi
}
dotbackup() {
  BACKUP_TIME_NOW="$(date +%s)"
  mkdir -p $HOME/.dotfiles-backup/$BACKUP_TIME_NOW
  # This file needs to exist for the ls-files command option
  touch $HOME/.gitignore
  dotoverride ls-files --modified | xargs -i cp {} ~/.dotfiles-backup/$BACKUP_TIME_NOW 2>/dev/null
  unset BACKUP_TIME_NOW
}
dotcheckout() {
  dotoverride fetch
  dotbackup
  cd $HOME
  dotoverride checkout -- .
  cd -
}
dotcommit() {
  INPUT=$@
  dotoverride add .
  dotoverride commit -m "${INPUT}"
  dotoverride push
}
dotwhoops() {
  dotoverride add .
  dotoverride commit --amend --no-edit
  dotoverride push -f
}